{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/gostack/aulas/06-gobarber-web/src/hooks/toast.tsx\";\nimport React, { createContext, useContext, useCallback, useState } from 'react';\nimport { uuid } from 'uuidv4';\nimport ToastContainer from '../components/ToastContainer';\nconst ToastContext = createContext({});\n\nconst ToastProvider = ({\n  children\n}) => {\n  const [messages, setMessages] = useState([]);\n  const addToast = useCallback(({}) => {\n    const id = uuid();\n    const toast = {\n      id\n    };\n  }, []);\n  const removeToast = useCallback(() => {\n    console.log('removeToast');\n  }, []);\n  return /*#__PURE__*/React.createElement(ToastContext.Provider, {\n    value: {\n      addToast,\n      removeToast\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, children, /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction useToast() {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error(\"useToast must be used within a ToastProvider\");\n  }\n\n  return context;\n}\n\nexport { ToastProvider, useToast };","map":{"version":3,"sources":["/home/pedro/Documents/gostack/aulas/06-gobarber-web/src/hooks/toast.tsx"],"names":["React","createContext","useContext","useCallback","useState","uuid","ToastContainer","ToastContext","ToastProvider","children","messages","setMessages","addToast","id","toast","removeToast","console","log","useToast","context","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,WAA3C,EAAwDC,QAAxD,QAAwE,OAAxE;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AAcA,MAAMC,YAAY,GAAGN,aAAa,CAAmB,EAAnB,CAAlC;;AAEA,MAAMO,aAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAiB,EAAjB,CAAxC;AAEA,QAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC,EAAD,KAAkC;AAC7D,UAAMU,EAAE,GAAGR,IAAI,EAAf;AAEA,UAAMS,KAAK,GAAG;AACZD,MAAAA;AADY,KAAd;AAID,GAP2B,EAOzB,EAPyB,CAA5B;AASA,QAAME,WAAW,GAAGZ,WAAW,CAAC,MAAM;AACpCa,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAKA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEL,MAAAA,QAAF;AAAYG,MAAAA;AAAZ,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QADH,eAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAvBD;;AAyBA,SAASS,QAAT,GAAsC;AACpC,QAAMC,OAAO,GAAGjB,UAAU,CAACK,YAAD,CAA1B;;AAEA,MAAG,CAACY,OAAJ,EAAa;AACX,UAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACD;;AAED,SAAOD,OAAP;AACD;;AAED,SAAQX,aAAR,EAAuBU,QAAvB","sourcesContent":["import React, { createContext, useContext, useCallback, useState } from 'react'\nimport { uuid } from 'uuidv4'\n\nimport ToastContainer from '../components/ToastContainer'\n\ninterface ToastMessage {\n  id: string;\n  type?: 'success' | 'error' | 'info';\n  title: string;\n  description?: string;\n}\n\ninterface ToastContextData {\n  addToast(): void;\n  removeToast(): void;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const [messages, setMessages] = useState<ToastMessage[]>([])\n\n  const addToast = useCallback(({}: Omit<ToastMessage, 'id'>) => {\n    const id = uuid();\n\n    const toast = {\n      id,\n\n    }\n  }, [])\n\n  const removeToast = useCallback(() => {\n    console.log('removeToast')\n  }, [])\n\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer />\n    </ToastContext.Provider>\n  )\n}\n\nfunction useToast(): ToastContextData {\n  const context = useContext(ToastContext);\n\n  if(!context) {\n    throw new Error(\"useToast must be used within a ToastProvider\")\n  }\n\n  return context;\n}\n\nexport {ToastProvider, useToast }\n"]},"metadata":{},"sourceType":"module"}