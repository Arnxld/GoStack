{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/gostack/aulas/08-finalizando-frontend/src/hooks/auth.tsx\";\nimport React, { createContext, useCallback, useState, useContext } from 'react';\nimport api from '../services/apiClient';\nconst AuthContext = createContext({});\n\nconst AuthProvider = ({\n  children\n}) => {\n  const [data, setData] = useState(() => {\n    const token = localStorage.getItem('@GoBarber:token');\n    const user = localStorage.getItem('@GoBarber:user');\n\n    if (token && user) {\n      api.defaults.headers.authorization = `Bearer ${token}`;\n      return {\n        token,\n        user: JSON.parse(user)\n      };\n    }\n\n    return {};\n  });\n  const signIn = useCallback(async ({\n    email,\n    password\n  }) => {\n    const response = await api.post('sessions', {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    localStorage.setItem('@GoBarber:token', token);\n    localStorage.setItem('@GoBarber:user', JSON.stringify(user));\n    api.defaults.headers.authorization = `Bearer ${token}`;\n    setData({\n      token,\n      user\n    });\n  }, []);\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@GoBarber:token');\n    localStorage.removeItem('@GoBarber:user');\n    setData({});\n  }, []);\n  const updateUser = useCallback(updateData => {\n    setData({\n      token: data.token\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      user: data.user,\n      signIn,\n      signOut\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nfunction useAuth() {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n}\n\nexport { AuthProvider, useAuth };","map":{"version":3,"sources":["/home/pedro/Documents/gostack/aulas/08-finalizando-frontend/src/hooks/auth.tsx"],"names":["React","createContext","useCallback","useState","useContext","api","AuthContext","AuthProvider","children","data","setData","token","localStorage","getItem","user","defaults","headers","authorization","JSON","parse","signIn","email","password","response","post","setItem","stringify","signOut","removeItem","updateUser","updateData","useAuth","context","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,QAA5C,EAAsDC,UAAtD,QAAwE,OAAxE;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAyBA,MAAMC,WAAW,GAAGL,aAAa,CAAkB,EAAlB,CAAjC;;AAEA,MAAMM,YAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAY,MAAM;AAChD,UAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAd;AACA,UAAMC,IAAI,GAAGF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAb;;AAEA,QAAIF,KAAK,IAAIG,IAAb,EAAmB;AACjBT,MAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASN,KAAM,EAArD;AAEA,aAAO;AAAEA,QAAAA,KAAF;AAASG,QAAAA,IAAI,EAAEI,IAAI,CAACC,KAAL,CAAWL,IAAX;AAAf,OAAP;AACD;;AAED,WAAO,EAAP;AACD,GAX+B,CAAhC;AAaA,QAAMM,MAAM,GAAGlB,WAAW,CAAC,OAAO;AAACmB,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAP,KAA6B;AACtD,UAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAJ,CAAS,UAAT,EAAqB;AAC1CH,MAAAA,KAD0C;AAE1CC,MAAAA;AAF0C,KAArB,CAAvB;AAKA,UAAM;AAAEX,MAAAA,KAAF;AAASG,MAAAA;AAAT,QAAkBS,QAAQ,CAACd,IAAjC;AAEAG,IAAAA,YAAY,CAACa,OAAb,CAAqB,iBAArB,EAAwCd,KAAxC;AACAC,IAAAA,YAAY,CAACa,OAAb,CAAqB,gBAArB,EAAuCP,IAAI,CAACQ,SAAL,CAAeZ,IAAf,CAAvC;AAEAT,IAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASN,KAAM,EAArD;AAEAD,IAAAA,OAAO,CAAC;AAAEC,MAAAA,KAAF;AAASG,MAAAA;AAAT,KAAD,CAAP;AACD,GAdyB,EAcvB,EAduB,CAA1B;AAgBA,QAAMa,OAAO,GAAGzB,WAAW,CAAC,MAAM;AAChCU,IAAAA,YAAY,CAACgB,UAAb,CAAwB,iBAAxB;AACAhB,IAAAA,YAAY,CAACgB,UAAb,CAAwB,gBAAxB;AAEAlB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAL0B,EAKxB,EALwB,CAA3B;AAOA,QAAMmB,UAAU,GAAG3B,WAAW,CAAE4B,UAAD,IAA+B;AAC5DpB,IAAAA,OAAO,CAAC;AACNC,MAAAA,KAAK,EAAEF,IAAI,CAACE;AADN,KAAD,CAAP;AAGD,GAJ6B,EAI3B,EAJ2B,CAA9B;AAMA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAEL,IAAI,CAACK,IAAb;AAAmBM,MAAAA,MAAnB;AAA2BO,MAAAA;AAA3B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,QADH,CADF;AAKD,CAhDD;;AAkDA,SAASuB,OAAT,GAAoC;AAClC,QAAMC,OAAO,GAAG5B,UAAU,CAACE,WAAD,CAA1B;;AAEA,MAAG,CAAC0B,OAAJ,EAAa;AACX,UAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACD;;AAED,SAAOD,OAAP;AACD;;AAGD,SAASzB,YAAT,EAAuBwB,OAAvB","sourcesContent":["import React, { createContext, useCallback, useState, useContext } from 'react';\nimport api from '../services/apiClient'\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  avatar_url: string;\n}\n\ninterface AuthState {\n  token: string;\n  user: User;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextData {\n  user: User;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@GoBarber:token');\n    const user = localStorage.getItem('@GoBarber:user');\n\n    if (token && user) {\n      api.defaults.headers.authorization = `Bearer ${token}`\n\n      return { token, user: JSON.parse(user)};\n    }\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(async ({email, password}) => {\n    const response = await api.post('sessions', {\n      email,\n      password\n    })\n\n    const { token, user } = response.data;\n\n    localStorage.setItem('@GoBarber:token', token);\n    localStorage.setItem('@GoBarber:user', JSON.stringify(user));\n\n    api.defaults.headers.authorization = `Bearer ${token}`\n\n    setData({ token, user })\n  }, [])\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@GoBarber:token');\n    localStorage.removeItem('@GoBarber:user');\n\n    setData({} as AuthState)\n  }, [])\n\n  const updateUser = useCallback((updateData: Partial<User>) => {\n    setData({\n      token: data.token\n    })\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  )\n};\n\nfunction useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  if(!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n}\n\n\nexport { AuthProvider, useAuth }\n"]},"metadata":{},"sourceType":"module"}