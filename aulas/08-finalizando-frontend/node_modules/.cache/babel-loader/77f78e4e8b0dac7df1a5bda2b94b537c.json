{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/gostack/aulas/08-finalizando-frontend/src/components/Input/index.tsx\";\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\nimport { Container, Error } from './styles';\n\nconst Input = ({\n  name,\n  containerStyle,\n  icon: Icon,\n  ...rest\n}) => {\n  const inputRef = useRef(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n  const {\n    fieldName,\n    defaultValue,\n    error,\n    registerField\n  } = useField(name);\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n  const handleInputBlur = useCallback(() => {\n    var _inputRef$current;\n\n    setIsFocused(false);\n    setIsFilled(!!((_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value));\n  }, []);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value'\n    });\n  }, [fieldName, registerField]);\n  return /*#__PURE__*/React.createElement(Container, {\n    isErrored: !!error,\n    isFilled: isFilled,\n    isFocused: isFocused,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, Icon && /*#__PURE__*/React.createElement(Icon, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    style: true,\n    onFocus: handleInputFocus,\n    onBlur: handleInputBlur,\n    defaultValue: defaultValue,\n    ref: inputRef\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  })), error && /*#__PURE__*/React.createElement(Error, {\n    title: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FiAlertCircle, {\n    color: \"#C53030\",\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/pedro/Documents/gostack/aulas/08-finalizando-frontend/src/components/Input/index.tsx"],"names":["React","useEffect","useRef","useState","useCallback","FiAlertCircle","useField","Container","Error","Input","name","containerStyle","icon","Icon","rest","inputRef","isFocused","setIsFocused","isFilled","setIsFilled","fieldName","defaultValue","error","registerField","handleInputFocus","handleInputBlur","current","value","ref","path"],"mappings":";AAAA,OAAOA,KAAP,IAAqCC,SAArC,EAAgDC,MAAhD,EAAwDC,QAAxD,EAAkEC,WAAlE,QAAqF,OAArF;AAEA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,QAAT,QAAyB,cAAzB;AAIA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,UAAjC;;AAQA,MAAMC,KAA2B,GAAG,CAAE;AAACC,EAAAA,IAAD;AAAOC,EAAAA,cAAP;AAAuBC,EAAAA,IAAI,EAAEC,IAA7B;AAAmC,KAAGC;AAAtC,CAAF,KAAmD;AACrF,QAAMC,QAAQ,GAAGb,MAAM,CAAmB,IAAnB,CAAvB;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAEiB,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,MAAoDjB,QAAQ,CAACI,IAAD,CAAlE;AAEA,QAAMc,gBAAgB,GAAGpB,WAAW,CAAC,MAAM;AACzCa,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFmC,EAEjC,EAFiC,CAApC;AAIA,QAAMQ,eAAe,GAAGrB,WAAW,CAAC,MAAM;AAAA;;AACxCa,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAE,IAAAA,WAAW,CAAC,CAAC,uBAACJ,QAAQ,CAACW,OAAV,sDAAC,kBAAkBC,KAAnB,CAAF,CAAX;AACD,GAJkC,EAIhC,EAJgC,CAAnC;AAMA1B,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,aAAa,CAAC;AACZb,MAAAA,IAAI,EAAEU,SADM;AAEZQ,MAAAA,GAAG,EAAEb,QAAQ,CAACW,OAFF;AAGZG,MAAAA,IAAI,EAAE;AAHM,KAAD,CAAb;AAKD,GANQ,EAMN,CAACT,SAAD,EAAYG,aAAZ,CANM,CAAT;AAQA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAE,CAAC,CAACD,KAAxB;AAA+B,IAAA,QAAQ,EAAEJ,QAAzC;AAAmD,IAAA,SAAS,EAAEF,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,IAAI,iBAAI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADV,eAEA;AACE,IAAA,KAAK,MADP;AAEE,IAAA,OAAO,EAAEW,gBAFX;AAGE,IAAA,MAAM,EAAEC,eAHV;AAIE,IAAA,YAAY,EAAEJ,YAJhB;AAKE,IAAA,GAAG,EAAEN;AALP,KAMMD,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFA,EAWCQ,KAAK,iBACJ,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,SAArB;AAA+B,IAAA,IAAI,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,CADF;AAmBD,CA3CD;;AA6CA,eAAeb,KAAf","sourcesContent":["import React, { InputHTMLAttributes, useEffect, useRef, useState, useCallback } from 'react';\nimport { IconBaseProps } from 'react-icons'\nimport { FiAlertCircle } from 'react-icons/fi'\nimport { useField } from '@unform/core'\n\nimport Tooltip from '../Tooltip'\n\nimport { Container, Error } from './styles'\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  containerStyle: object;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ( {name, containerStyle, icon: Icon, ...rest} ) => {\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [isFocused, setIsFocused] = useState(false)\n  const [isFilled, setIsFilled] = useState(false)\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true)\n  }, [])\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false)\n\n    setIsFilled(!!inputRef.current?.value)\n  }, [])\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value'\n    })\n  }, [fieldName, registerField])\n\n  return (\n    <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused }>\n    { Icon && <Icon size={20}/>}\n    <input\n      style\n      onFocus={handleInputFocus}\n      onBlur={handleInputBlur}\n      defaultValue={defaultValue}\n      ref={inputRef}\n      {...rest}\n    />\n\n    {error && (\n      <Error title={error}>\n        <FiAlertCircle color=\"#C53030\" size={20} />\n      </Error>\n    )}\n    </Container>\n  )\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}