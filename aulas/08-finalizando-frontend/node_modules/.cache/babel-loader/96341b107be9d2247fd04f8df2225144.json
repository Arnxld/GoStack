{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Documents/gostack/aulas/08-finalizando-frontend/src/pages/Dashboard/index.tsx\";\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { isToday, format } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport { FiPower, FiClock } from 'react-icons/fi';\nimport { Container, Header, HeaderContent, Profile, Content, Schedule, NextAppointment, Section, Appointment, Calendar } from './styles';\nimport logoImg from \"../../assets/logo.svg\";\nimport { useAuth } from '../../hooks/auth';\nimport api from '../../services/apiClient';\n\nconst Dashboard = () => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [monthAvailability, setMonthAvailability] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const {\n    signOut,\n    user\n  } = useAuth();\n  const handleDateChange = useCallback((day, modifiers) => {\n    if (modifiers.available) {\n      setSelectedDate(day);\n    }\n\n    setSelectedDate(day);\n  }, []);\n  const handleMonthChange = useCallback(month => {\n    setCurrentMonth(month);\n  }, []);\n  useEffect(() => {\n    api.get(`/providers/${user.id}/month-availability`, {\n      params: {\n        year: currentMonth.getFullYear(),\n        month: currentMonth.getMonth() + 1\n      }\n    }).then(response => {\n      setMonthAvailability(response.data);\n    });\n  }, [currentMonth, user.id]);\n  useEffect(() => {\n    api.get('/appointments/me', {\n      params: {\n        year: selectedDate.getFullYear(),\n        month: selectedDate.getMonth() + 1,\n        day: selectedDate.getDate()\n      }\n    }).then(response => {\n      setAppointments(response.data);\n    });\n  }, [selectedDate]);\n  const disabledDays = useMemo(() => {\n    const dates = monthAvailability.filter(monthDay => monthDay.available === false).map(monthDay => {\n      const year = currentMonth.getFullYear();\n      const month = currentMonth.getMonth();\n      return new Date(year, month, monthDay.day);\n    });\n    return dates;\n  }, [currentMonth, monthAvailability]);\n  const selectedDateAsText = useMemo(() => {\n    return format(selectedDate, \"'dia' dd 'de' MMMM\", {\n      locale: ptBR\n    });\n  }, [selectedDate]);\n  const selectedWeekDay = useMemo(() => {\n    return format(selectedDate, 'cccc', {\n      locale: ptBR\n    });\n  }, [selectedDate]);\n  const morningAppointments = useMemo(() => {\n    return appointments.filter(appointments => {\n      return;\n    });\n  }, [appointments]);\n  const afternoonAppointments = useMemo(() => {}, [appointments]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HeaderContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"GoBarber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Profile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: user.avatar_url,\n    alt: user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, \"Bem-vindo,\"), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, user.name))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: signOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FiPower, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Schedule, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, \"Hor\\xE1rios Agendados\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, isToday(selectedDate) && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 51\n    }\n  }, \"Hoje\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, selectedDateAsText), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, selectedWeekDay)), /*#__PURE__*/React.createElement(NextAppointment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, \"Atendimento a seguir\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://avatars2.githubusercontent.com/u/2254731?s=400&u=0ba16a79456c2f250e7579cb388fa18c5c2d7d65&v=4\",\n    alt: \"Diego\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, \"Diego Fernandes\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FiClock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  }), \"08:00\"))), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, \"Manh\\xE3\"), /*#__PURE__*/React.createElement(Appointment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FiClock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }), \"08:00\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://avatars2.githubusercontent.com/u/2254731?s=400&u=0ba16a79456c2f250e7579cb388fa18c5c2d7d65&v=4\",\n    alt: \"Diego\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 33\n    }\n  }, \"Diego Fernandes\"))), /*#__PURE__*/React.createElement(Appointment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FiClock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  }), \"08:00\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://avatars2.githubusercontent.com/u/2254731?s=400&u=0ba16a79456c2f250e7579cb388fa18c5c2d7d65&v=4\",\n    alt: \"Diego\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 33\n    }\n  }, \"Diego Fernandes\")))), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, \"Tarde\"), /*#__PURE__*/React.createElement(Appointment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FiClock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 33\n    }\n  }), \"08:00\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://avatars2.githubusercontent.com/u/2254731?s=400&u=0ba16a79456c2f250e7579cb388fa18c5c2d7d65&v=4\",\n    alt: \"Diego\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 33\n    }\n  }, \"Diego Fernandes\"))))), /*#__PURE__*/React.createElement(Calendar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DayPicker, {\n    weekdaysShort: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S'],\n    fromMonth: new Date(),\n    disabledDays: [{\n      daysOfWeek: [0, 6]\n    }, ...disabledDays],\n    selectedDays: selectedDate,\n    modifiers: {\n      available: {\n        daysOfWeek: [1, 2, 3, 4, 5]\n      }\n    },\n    onDayClick: handleDateChange,\n    onMonthChange: handleMonthChange,\n    months: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/pedro/Documents/gostack/aulas/08-finalizando-frontend/src/pages/Dashboard/index.tsx"],"names":["React","useCallback","useEffect","useMemo","useState","isToday","format","ptBR","DayPicker","FiPower","FiClock","Container","Header","HeaderContent","Profile","Content","Schedule","NextAppointment","Section","Appointment","Calendar","useAuth","api","Dashboard","selectedDate","setSelectedDate","Date","currentMonth","setCurrentMonth","monthAvailability","setMonthAvailability","appointments","setAppointments","signOut","user","handleDateChange","day","modifiers","available","handleMonthChange","month","get","id","params","year","getFullYear","getMonth","then","response","data","getDate","disabledDays","dates","filter","monthDay","map","selectedDateAsText","locale","selectedWeekDay","morningAppointments","afternoonAppointments","logoImg","avatar_url","name","daysOfWeek"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { isToday, format} from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport DayPicker, { DayModifiers } from 'react-day-picker';\nimport 'react-day-picker/lib/style.css'\n\nimport { FiPower, FiClock } from 'react-icons/fi';\nimport { \n    Container, \n    Header, \n    HeaderContent, \n    Profile, \n    Content, \n    Schedule, \n    NextAppointment,\n    Section,\n    Appointment,\n    Calendar,\n} from './styles';\n\nimport logoImg from '../../assets/logo.svg';\nimport { useAuth } from '../../hooks/auth';\nimport api from '../../services/apiClient';\n\ninterface MonthAvailabilityItem {\n    day: number;\n    available: boolean;\n}\n\ninterface Appointment {\n    id: string;\n    date: string;\n    user: {\n        name: string;\n        avatar_url: string;\n    }\n}\nconst Dashboard: React.FC = () => {\n\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [currentMonth, setCurrentMonth] = useState(new Date());\n\n    const [monthAvailability, setMonthAvailability] = useState<MonthAvailabilityItem[]>([]);\n\n    const [appointments, setAppointments] = useState<Appointment[]>([])\n\n    \n\n    const { signOut, user } = useAuth();\n\n    const handleDateChange = useCallback((day: Date, modifiers: DayModifiers) => {\n        if (modifiers.available) {\n            setSelectedDate(day)\n        }\n        \n        setSelectedDate(day);\n    }, [])\n\n    const handleMonthChange = useCallback((month: Date) => {\n        setCurrentMonth(month)\n    }, [])\n\n    useEffect(() => {\n        api.get(`/providers/${user.id}/month-availability`, {\n            params: {\n               year: currentMonth.getFullYear(),\n               month: currentMonth.getMonth() + 1,\n            }\n        }).then(response => {\n            setMonthAvailability(response.data)\n        })\n    }, [currentMonth, user.id])\n\n    useEffect(() => {\n        api.get('/appointments/me', {\n            params: {\n                year: selectedDate.getFullYear(),\n                month: selectedDate.getMonth() + 1,\n                day: selectedDate.getDate(),\n            }\n        }).then(response => {\n            setAppointments(response.data)\n        })\n    }, [selectedDate])\n\n    const disabledDays = useMemo(() => {\n        const dates = monthAvailability.filter(monthDay => monthDay.available === false)\n        .map(monthDay => {\n            const year = currentMonth.getFullYear();\n            const month = currentMonth.getMonth();\n            return new Date(year, month, monthDay.day)\n        });\n\n        return dates\n    }, [currentMonth, monthAvailability])\n\n    const selectedDateAsText = useMemo(() => {\n        return format(selectedDate, \"'dia' dd 'de' MMMM\", {\n            locale: ptBR\n        })\n    }, [selectedDate])\n\n    const selectedWeekDay = useMemo(() => {\n        return format(selectedDate, 'cccc', {\n            locale: ptBR\n        })\n    }, [selectedDate])\n\n    const morningAppointments = useMemo(() => {\n        return appointments.filter(appointments => {\n            return\n        })\n    }, [appointments])\n\n    const afternoonAppointments = useMemo(() => {}, [appointments])\n\n    return (\n        <Container>\n            <Header>\n                <HeaderContent>\n                    <img src={logoImg} alt=\"GoBarber\"/>\n\n                    <Profile>\n                        <img src={user.avatar_url} alt={user.name} />\n                \n                        <div>\n                            <span>Bem-vindo,</span>\n                            <strong>{user.name}</strong>\n                        </div>\n                    </Profile>\n\n                    <button type=\"button\" onClick={signOut}>\n                        <FiPower />\n                    </button>\n                </HeaderContent>\n            </Header>\n\n            <Content>\n                <Schedule>\n                    <h1>Horários Agendados</h1>\n                    <p>\n                        {isToday(selectedDate) && <span>Hoje</span>}\n                        <span>{selectedDateAsText}</span>\n                        <span>{selectedWeekDay}</span>\n                    </p>\n\n                    <NextAppointment>\n                        <strong>Atendimento a seguir</strong>\n                        <div>\n                            <img src=\"https://avatars2.githubusercontent.com/u/2254731?s=400&u=0ba16a79456c2f250e7579cb388fa18c5c2d7d65&v=4\" alt=\"Diego\"/>\n                        \n                            <strong>Diego Fernandes</strong>\n                            <span>\n                                <FiClock />\n                                08:00\n                            </span>\n                        \n                        </div>\n                    </NextAppointment>\n                \n                    <Section>\n                        <strong>Manhã</strong>\n\n                        <Appointment>\n                            <span>\n                                <FiClock />\n                                08:00\n                            </span>\n\n                            <div>\n                                <img src=\"https://avatars2.githubusercontent.com/u/2254731?s=400&u=0ba16a79456c2f250e7579cb388fa18c5c2d7d65&v=4\" alt=\"Diego\"/>\n                                <strong>Diego Fernandes</strong>\n                            \n                            </div>\n                        </Appointment>\n\n                        <Appointment>\n                            <span>\n                                <FiClock />\n                                08:00\n                            </span>\n\n                            <div>\n                                <img src=\"https://avatars2.githubusercontent.com/u/2254731?s=400&u=0ba16a79456c2f250e7579cb388fa18c5c2d7d65&v=4\" alt=\"Diego\"/>\n                                <strong>Diego Fernandes</strong>\n                            </div>\n                        </Appointment>\n                    </Section>\n                    <Section>\n                        <strong>Tarde</strong>\n\n                        <Appointment>\n                            <span>\n                                <FiClock />\n                                08:00\n                            </span>\n\n                            <div>\n                                <img src=\"https://avatars2.githubusercontent.com/u/2254731?s=400&u=0ba16a79456c2f250e7579cb388fa18c5c2d7d65&v=4\" alt=\"Diego\"/>\n                                <strong>Diego Fernandes</strong>\n                            </div>\n                        </Appointment>\n                    </Section>\n                </Schedule>\n                <Calendar>\n                    <DayPicker \n                        weekdaysShort={['D', 'S', 'T', 'Q', 'Q', 'S', 'S']}\n                        fromMonth={new Date()}\n                        disabledDays={[\n                            { daysOfWeek: [0, 6]},\n                            ...disabledDays\n                        ]}\n                        selectedDays={selectedDate}\n                        modifiers={{\n                            available: { daysOfWeek: [1, 2, 3, 4, 5]}\n                        }}\n                        onDayClick={handleDateChange}\n                        onMonthChange={handleMonthChange}\n                        months={[\n                            'Janeiro',\n                            'Fevereiro',\n                            'Março',\n                            'Abril',\n                            'Maio',\n                            'Junho',\n                            'Julho',\n                            'Agosto',\n                            'Setembro',\n                            'Outubro',\n                            'Novembro',\n                            'Dezembro'\n                        ]}\n                    />\n                </Calendar>\n            </Content>\n        </ Container>\n    )\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}